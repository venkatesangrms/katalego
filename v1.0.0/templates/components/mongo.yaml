apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
    tier: app
    role: master
spec:
  ports:
    - name: mongo
      protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: mongo
      tier: app
      role: master
  template:
    metadata:
      name: mongo
      labels:
        app: mongo
        tier: app
        role: master
    spec:
      serviceAccountName: {{.Release.Namespace}}-sa
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mongo
      - name: fluentd-config
        configMap:
          name: mongo-fluentd-config
      containers:
      - name: mongo
        image: {{required "Image Info is mandatory! Read the Project Documentation to understand what and where to configure." .Values.image.MONGO }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            {{- if (eq "Small" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.small.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.small.cpu.max.MONGO }}m
            {{- else if (eq "Medium" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.medium.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.medium.cpu.max.MONGO }}m
            {{- else if (eq "Large" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.large.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.large.cpu.max.MONGO }}m
            {{- else if (eq "Xlarge" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.xlarge.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.xlarge.cpu.max.MONGO }}m
            {{- end }}
          requests:
            {{- if (eq "Small" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.small.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.small.cpu.max.MONGO }}m
            {{- else if (eq "Medium" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.medium.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.medium.cpu.max.MONGO }}m
            {{- else if (eq "Large" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.large.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.large.cpu.max.MONGO }}m
            {{- else if (eq "Xlarge" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.xlarge.memory.max.MONGO }}Mi
            cpu: {{ .Values.resourceUnit.xlarge.cpu.max.MONGO }}m
            {{- end }}
        volumeMounts:
        - mountPath: /data/db
          name: data
          subPath: db
        - mountPath: /tmp
          name: data
          subPath: tmp
        - mountPath: /var/log/mongodb
          name: data
          subPath: mongodb
        securityContext:
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        ports:
        - name: mongo
          containerPort: 27017
      - name: fluentd
        image: {{ .Values.image.LOGZIO }}
        env:
        - name:  LOGZIO_TOKEN
          value: {{ .Values.logzio.token | quote }}
        - name:  LOGZIO_URL
          value: {{ .Values.logzio.url | quote }}
        - name: CONTAINER_NAME
          value: mongo
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          value: mongo
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            memory: {{ .Values.logzio.memory }}Mi
          requests:
            cpu: {{ .Values.logzio.cpu }}m
            memory: {{ .Values.logzio.memory }}Mi
        volumeMounts:
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: data
          mountPath: /var/log/mongodb
          subPath: mongodb
      imagePullSecrets:
      - name: container-registry-key
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1000
      allowedCapabilities: null
