apiVersion: apps/v1
kind: Deployment
metadata:
  name: datarouter
spec:
  replicas: 0
  selector:
    matchLabels:
      app: datarouter
  template:
    metadata:
      name: datarouter
      labels:
        app: datarouter
        tier: application
        container_name: datarouter
        environment: {{ .Values.label.ENVIRONMENT }}
    spec:
      serviceAccountName: common-service-account
      volumes:      
      - name: datarouter
        persistentVolumeClaim:
          claimName: datarouter
      - name: fluentd-config
        configMap:
          name: datarouter-fluentd-config
      containers:
      - name: datarouter
        image: {{required "Data Router Image Info is mandatory! Read the Project Documentation to understand what and where to configure." .Values.image.DATAROUTER }}
        imagePullPolicy: IfNotPresent
        args:
        - java
        - -Xms128m
        {{- if (eq "Small" .Values.resourceUnit.size) }}
        - -Xmx{{.Values.resourceUnit.small.memory.max.DATAROUTER }}m
        {{- else if (eq "Medium" .Values.resourceUnit.size) }}
        - -Xmx{{.Values.resourceUnit.medium.memory.max.DATAROUTER }}m
        {{- else if (eq "Large" .Values.resourceUnit.size) }}
        - -Xmx{{.Values.resourceUnit.large.memory.max.DATAROUTER }}m
        {{- else if (eq "Xlarge" .Values.resourceUnit.size) }}
        - -Xmx{{.Values.resourceUnit.xlarge.memory.max.DATAROUTER }}m
        {{- end }}
        - -DSYSTEMi_HOME=/metricstream/SYSTEMi
        - -DJAVA_HOME=/opt/java/bin/
        - -jar
        - /metricstream/SYSTEMi/datarouter/data-router.jar
        resources:
          limits:
            {{- if (eq "Small" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.small.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.small.cpu.max.DATAROUTER }}m
            {{- else if (eq "Medium" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.medium.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.medium.cpu.max.DATAROUTER }}m
            {{- else if (eq "Large" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.large.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.large.cpu.max.DATAROUTER }}m
            {{- else if (eq "Xlarge" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.xlarge.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.xlarge.cpu.max.DATAROUTER }}m
            {{- end }}
          requests:
            {{- if (eq "Small" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.small.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.small.cpu.max.DATAROUTER }}m
            {{- else if (eq "Medium" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.medium.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.medium.cpu.max.DATAROUTER }}m
            {{- else if (eq "Large" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.large.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.large.cpu.max.DATAROUTER }}m
            {{- else if (eq "Xlarge" .Values.resourceUnit.size) }}
            memory: {{ .Values.resourceUnit.xlarge.memory.max.DATAROUTER }}Mi
            cpu: {{ .Values.resourceUnit.xlarge.cpu.max.DATAROUTER }}m
            {{- end }}
        volumeMounts:
        - mountPath: /metricstream/SYSTEMi/datarouter/datarouter.properties
          name: datarouter
          subPath: datarouter.properties
        - mountPath: /metricstream/SYSTEMi/datarouter/log4j.properties
          name: datarouter
          subPath: log4j.properties
        - mountPath: /metricstream/SYSTEMi/datarouter/smc_instrumentation.json
          name: datarouter
          subPath: smc_instrumentation.json
        - mountPath: /metricstream/SYSTEMi/datarouter/logs
          name: datarouter
          subPath: logs
        securityContext:
          readOnlyRootFilesystem: true
      - name: fluentd
        image: {{ .Values.image.LOGZIO }}
        env:
        - name:  LOGZIO_TOKEN
          value: {{ .Values.logzio.token | quote }}
        - name:  LOGZIO_URL
          value: {{ .Values.logzio.url | quote }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: POD_UNIQUE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: CONTAINER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['container_name']
        - name: ENVIRONMENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['environment']
        - name: APP_TIER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tier']
        resources:
          limits:
            memory: {{ .Values.logzio.memory }}Mi
          requests:
            cpu: {{ .Values.logzio.cpu }}m
            memory: {{ .Values.logzio.memory }}Mi
        volumeMounts:
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: datarouter
          mountPath: /metricstream/SYSTEMi/datarouter/logs
          subPath: logs
      imagePullSecrets:
      - name: container-registry-key
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1000
      allowedCapabilities: null

